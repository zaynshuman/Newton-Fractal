
% Derivative-free nonlinear solver function 

function [x, allxn] = derivFree(x0, x1, f, N)
% Inputs:
% x0 is the first initial data (complex)
% x0 is the second initial data (complex)
% f is a function 
% N is the number of iterations, starting at x_2

% Return values:
% x is the result of the Nth iteration of the secant method
% allxn contains the sequence generated by this method
% (including the initial conditions) 

% allxn is initialised as an array of length N+2 since it
% must contain the initial conditions as its first two
% elements

allxn = zeros(1, N+2);
allxn(1) = x0;
allxn(2) = x1;

% The for loop iterates through and updates each element
% of allxn (beginning at allxn(3)) using the secant method 

for i = 1: N

    % gradApproximation approximates the gradient at the i+1-th
    % value of f 

    gradApproximation = ((f(allxn(i+1)) - f(allxn(i)))) / ...
        ((allxn(i+1) - allxn(i)));
    allxn(i+2) = allxn(i+1) - ((f(allxn(i+1))) / ...
        gradApproximation);

end

x = allxn(N+2);
