function [z, allzn] = Newton(f, df, z0, N)
% Inputs: 
% f is a function and df its derivative
% z0 is the initial data (complex)
% N is the number of iterations

% Return values:
% z is the final approximation of Newton’s method
% allzn contains the sequence generated by Newton’s method
% (including the initial condition)

% allzn is initialised as an array of length N+1 since it
% must contain the initial condition as its first element 

allzn = zeros(N+1, 1);
allzn(1) = z0;

% The for loop iterates through and updates each element
% of allzn (beginning at allzn(2)) using Newtons methods
% with the element prior in allzn 

for j=1:N

    allzn(j+1) = allzn(j) - (f(allzn(j)) / df(allzn(j)));

end

z = allzn(N+1);



